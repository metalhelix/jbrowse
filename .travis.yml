sudo: required
dist: trusty
language: perl
python: 2.7.10
perl:
- '5.26'
- '5.14'
addons:
  apt:
    packages:
    - libdb-dev
    - libgd2-noxpm-dev
  firefox: '58.0'
  chrome: stable
cache:
  directories:
  - extlib/
  - "$HOME/perl5/"
  - node_modules/
  - "$HOME/python/"
  - "$HOME/.nvm/"
  - "$HOME/geckodriver_$GECKODRIVER_VERSION"
  - "$HOME/chromedriver_$CHROMEDRIVER_VERSION"
env:
    global:
        - GECKODRIVER_VERSION=0.19.1
        - CHROMEDRIVER_VERSION=2.35
install:
- |
  if [[ ! -f ~/geckodriver_$GECKODRIVER_VERSION/geckodriver ]]; then
    rm -rf ~/geckodriver_$GECKODRIVER_VERSION;
    mkdir ~/geckodriver_$GECKODRIVER_VERSION;
    wget -O - https://github.com/mozilla/geckodriver/releases/download/v0.19.1/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz | tar -xzf - -C ~/geckodriver_$GECKODRIVER_VERSION;
  fi
- export PATH=$PATH:$HOME/geckodriver_$GECKODRIVER_VERSION
- |
  if [[ ! -f ~/chromedriver_$CHROMEDRIVER_VERSION/chromedriver ]]; then
    rm -rf ~/chromedriver_$CHROMEDRIVER_VERSION;
    wget -N http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip -P ~/chromedriver_$CHROMEDRIVER_VERSION
    unzip ~/chromedriver_$CHROMEDRIVER_VERSION/chromedriver_linux64.zip -d ~/chromedriver_$CHROMEDRIVER_VERSION
    rm ~/chromedriver_$CHROMEDRIVER_VERSION/chromedriver*.zip
  fi
- export PATH=$PATH:$HOME/chromedriver_$CHROMEDRIVER_VERSION
- cpanm --notest GD::Image Text::Markdown DateTime JSON
- npm install -g jshint
# only init the python virtualenv if it did not show up in our build cache
- if [[ ! -f ~/python/bin/activate ]]; then virtualenv ~/python; fi
- source ~/python/bin/activate
- pip install nose selenium
script:
- jshint src/JBrowse/
# these versions *should* already be set in version control, but set them again here just in case
- if [[ "x$TRAVIS_TAG" != "x" ]]; then build/set_package_versions.pl $TRAVIS_TAG src/JBrowse/package.json package.json; fi
- RELEASE_VERSION=`node -e 'require("fs").readFile("src/JBrowse/package.json", (e,d)=>console.log(JSON.parse(d).version))'`
- BUILD_DIR=$PWD
- ./setup.sh
- prove -Isrc/perl5 -r -j3 tests/perl_tests;
- utils/jb_run.js -p 9000 & sleep 2
- node_modules/.bin/phantomjs tests/js_tests/run-jasmine.js http://localhost:9000/tests/js_tests/index.html
- MOZ_HEADLESS=1 SELENIUM_BROWSER=firefox JBROWSE_URL=http://localhost:9000/index.html tests/selenium_tests/travis_wrapper.sh;
# if we are building for inclusion into the `dev` branch, build the releases and test the minimal one too
- |
  if [[ "x$TRAVIS_TAG" != "x" || $TRAVIS_BRANCH = "build_work" || $TRAVIS_BRANCH = "dev" || $TRAVIS_PULL_REQUEST != "false" ]]; then
    make -f build/Makefile;
    rm -rf JBrowse-*/;
    unzip -q JBrowse-$RELEASE_VERSION.zip;
    cd JBrowse-$RELEASE_VERSION/;
    cp -r ../tests/ .;
    ./setup.sh;
    prove -Isrc/perl5 -r -j3 tests/perl_tests;
    cd $BUILD_DIR;
    MOZ_HEADLESS=1 SELENIUM_BROWSER=firefox NOSEOPTS="-I jasmine" JBROWSE_URL=http://localhost:9000/JBrowse-$RELEASE_VERSION/index.html tests/selenium_tests/travis_wrapper.sh;
    CHROME_HEADLESS=1 SELENIUM_BROWSER=chrome JBROWSE_URL=http://localhost:9000/JBrowse-$RELEASE_VERSION/index.html tests/selenium_tests/travis_wrapper.sh;
  fi
deploy:
# upload both minified and non-minified builds to GitHub releases
- provider: releases
  api_key:
    secure: BuOD7rqrcGKT3g0hVY5AGpJI/Kkko4DhSIYSUQ28sS2AOdoNyTD0t5doL/Kiq4BC41q198tbFFt1dnXGdo8YKpBSXO/uGUuuiGtMFHM++I84oLq20p49iyrenNZ4m/jy/Q4YtizIYLs83DVzVdQzhJ5hrTx6f+d1gc9EgaMeBF4=
  file: JBrowse-1.*.zip
  file_glob: true
  skip_cleanup: true
  on:
    repo: GMOD/jbrowse
    perl: 5.26
    tags: true
# upload regular non-minified version to npm
- provider: npm
  email: rbuels@gmail.com
  skip_cleanup: true
  api_key:
    secure: mgvlVdeMAR35C69+NERuYK4YGwbBAQsnSXS7IJhn3CRNgbtWh2zqaVV8NbHWitD9RJmocTbkIe94MfD8HfI3zBAgIVewckQ0QWMyjAJuWJR2Zw91R309aIQpbsix4kNCP9RDDrtfzovptBJ6JS8UwEk5CsQ7Wfohctek59+UnyU=
  on:
    repo: GMOD/jbrowse
    perl: 5.26
    tags: true
